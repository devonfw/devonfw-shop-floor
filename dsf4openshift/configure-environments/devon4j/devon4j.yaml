apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: devon4j
  annotations:
    openshift.io/generated-by: devonfw-shop-floor
    description: devon4j application. Use this template to create your docker image of a devon4j project and deploy it.
    iconClass: icon-openjdk
    tags: devonfw,devon4j,devonfw-shop-floor,openjdk,java,docker
objects:
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: devonfw-shop-floor-newApp
    labels:
      build: "${APPLICATION_NAME}${APPLICATION_NAME_SUFFIX}"
      app: "${APPLICATION_GROUP_NAME}${APPLICATION_NAME_SUFFIX}"
      name: "${APPLICATION_NAME}${APPLICATION_NAME_SUFFIX}"
    name: "${APPLICATION_NAME}${APPLICATION_NAME_SUFFIX}"
  spec:
    failedBuildsHistoryLimit: 5
    output:
      pushSecret:
        name: ${SECRET}
      to:
        kind: DockerImage
        name: "${DOCKER_IMAGE}:${DOCKER_TAG}"
    resources:
      limits:
        cpu: ${CPU}
        memory: ${MEMORY}
      requests:
        cpu: ${CPU}
        memory: ${MEMORY}
    runPolicy: Serial
    source:
      binary: {}
      type: Binary
    strategy:
      dockerStrategy:
        from:
          kind: DockerImage
          name: "adoptopenjdk/openjdk11:${OPENJDK_TAG}"
      type: Docker
    successfulBuildsHistoryLimit: 5
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: devonfw-shop-floor-newApp
    labels:
      app: "${APPLICATION_GROUP_NAME}${APPLICATION_NAME_SUFFIX}"
      name: "${APPLICATION_NAME}${APPLICATION_NAME_SUFFIX}"
    name: "${APPLICATION_NAME}${APPLICATION_NAME_SUFFIX}"
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: "${DOCKER_IMAGE}"
      from:
        kind: DockerImage
        name: "${DOCKER_IMAGE}:${DOCKER_TAG}"
      importPolicy: {}
      name: "${DOCKER_TAG}"
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: devonfw-shop-floor-newApp
    labels:
      app: "${APPLICATION_GROUP_NAME}${APPLICATION_NAME_SUFFIX}"
      name: "${APPLICATION_NAME}${APPLICATION_NAME_SUFFIX}"
    name: "${APPLICATION_NAME}${APPLICATION_NAME_SUFFIX}"
  spec:
    ports:
    - name: ${PORT}-tcp
      port: ${{PORT}}
      protocol: TCP
      targetPort: ${{PORT}}
    selector:
      app: "${APPLICATION_GROUP_NAME}${APPLICATION_NAME_SUFFIX}"
      deploymentconfig: "${APPLICATION_NAME}${APPLICATION_NAME_SUFFIX}"
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: devonfw-shop-floor-newApp
    labels:
      app: "${APPLICATION_GROUP_NAME}${APPLICATION_NAME_SUFFIX}"
      name: "${APPLICATION_NAME}${APPLICATION_NAME_SUFFIX}"
    name: "${APPLICATION_NAME}${APPLICATION_NAME_SUFFIX}"
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: "${APPLICATION_GROUP_NAME}${APPLICATION_NAME_SUFFIX}"
      deploymentconfig: "${APPLICATION_NAME}${APPLICATION_NAME_SUFFIX}"
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: devonfw-shop-floor-newApp
        labels:
          app: "${APPLICATION_GROUP_NAME}${APPLICATION_NAME_SUFFIX}"
          name: "${APPLICATION_NAME}${APPLICATION_NAME_SUFFIX}"
          deploymentconfig: "${APPLICATION_NAME}${APPLICATION_NAME_SUFFIX}"
      spec:
        containers:
        - image: "${DOCKER_IMAGE}:${DOCKER_TAG}"
          imagePullPolicy: Always
          name: "${APPLICATION_NAME}${APPLICATION_NAME_SUFFIX}"
          ports:
          - containerPort: ${{PORT}}
            protocol: TCP
          resources:
            limits:
              cpu: ${CPU}
              memory: ${MEMORY}
            requests:
              cpu: ${CPU}
              memory: ${MEMORY}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: ${SECRET}
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - "${APPLICATION_NAME}${APPLICATION_NAME_SUFFIX}"
        from:
          kind: ImageStreamTag
          name: "${APPLICATION_NAME}${APPLICATION_NAME_SUFFIX}:${DOCKER_TAG}"
      type: ImageChange
    - type: ConfigChange
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/generated-by: devonfw-shop-floor-newApp
      openshift.io/host.generated: "true"
    labels:
      app: "${APPLICATION_GROUP_NAME}${APPLICATION_NAME_SUFFIX}"
      name: "${APPLICATION_NAME}${APPLICATION_NAME_SUFFIX}"
    name: "${APPLICATION_NAME}${APPLICATION_NAME_SUFFIX}"
  spec:
    host: "${APPLICATION_HOSTNAME}"
    port:
      targetPort: ${PORT}-tcp
    tls:
      termination: edge
    to:
      kind: Service
      name: "${APPLICATION_NAME}${APPLICATION_NAME_SUFFIX}"
parameters:
  - name: APPLICATION_NAME
    displayName: "Application name"
    description: "The name for the application. It can't contain whitespaces. It should be the app name including type or technology. Example: mythaistar-frontend or mythaistar-angular"
    required: true
  - name: APPLICATION_GROUP_NAME
    displayName: "Application group name"
    description: "The name for the group list of applications. It can't contain whitespaces. It should be the app name excluding technology, example: My-Thai-Star"
    required: true
  - name: APPLICATION_NAME_SUFFIX
    displayName: "Application name suffix"
    description: "OPTIONAL: suffix to add to your application and group name. Is needed if you are going to deploy more than one environment in the same place. For example for develop environment you could use -dev value"
    required: false
  - name: OPENJDK_TAG
    displayName: "Openjdk version"
    description: "The docker image used is openjdk, you need to specify the tag for the correct version. More information here: https://hub.docker.com/_/openjdk"
    value: "jre-11.0.4_11-alpine"
    required: true
  - name: DOCKER_IMAGE
    displayName: "Docker image"
    description: "The url where your docker image is going to be push and pull."
    required: true
  - name: DOCKER_TAG
    displayName: "Docker tag"
    description: "The tag for the docker image."
    required: true
  - name: SECRET
    displayName: "Secret for docker registry"
    description: "The secret used to push the docker image to the registry."
    required: true
  - name: CPU
    displayName: "CPU"
    description: "The requested and limited CPU used for your project."
    value: "100m"
    required: true
  - name: MEMORY
    displayName: "Memory"
    description: "The requested and limited memory used for your project."
    value: "250Mi"
    required: true
  - name: APPLICATION_HOSTNAME
    displayName: "Application hostname"
    description: "Custom hostname for service routes. Leave blank for default hostname, e.g.: <application-name>.<project>.<default-domain-suffix>"
    required: false
  - name: PORT
    displayName: "Application port"
    description: "The port used for your application."
    value: "8080"
    required: true
